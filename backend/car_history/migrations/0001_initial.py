# Generated by Django 4.2.20 on 2025-10-24 14:11

import car_history.utils
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('joined_date', models.DateField(auto_now_add=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DamageEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('description', models.TextField(blank=True)),
                ('photos', models.ImageField(blank=True, null=True, upload_to=car_history.utils.damage_image_path)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('vin', models.CharField(max_length=17, primary_key=True, serialize=False, unique=True, verbose_name='VIN')),
                ('production_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='Rok produkcji')),
                ('odometer', models.PositiveIntegerField(verbose_name='Przebieg (km)')),
                ('body_color', models.CharField(choices=[('Czarny', 'Czarny'), ('Biały', 'Biały'), ('Srebrny', 'Srebrny'), ('Szary', 'Szary'), ('Czerwony', 'Czerwony'), ('Niebieski', 'Niebieski'), ('Zielony', 'Zielony'), ('Beżowy', 'Beżowy'), ('Żółty', 'Żółty'), ('Inny', 'Inny')], default='Biały', verbose_name='Kolor nadwozia')),
                ('interior_color', models.CharField(choices=[('Czarny', 'Czarny'), ('Beżowy', 'Beżowy'), ('Szary', 'Szary'), ('Brązowy', 'Brązowy'), ('Biały', 'Biały'), ('Czerwony', 'Czerwony'), ('Inny', 'Inny')], default='Czarny', verbose_name='Kolor wnętrza')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Cena (PLN)')),
                ('first_registration', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Data pierwszej rejestracji')),
                ('location', models.CharField(default='', max_length=100, verbose_name='Lokalizacja')),
                ('wheel_size', models.CharField(choices=[('15"', '15"'), ('16"', '16"'), ('17"', '17"'), ('18"', '18"'), ('19"', '19"'), ('20"', '20"'), ('21"', '21"'), ('22"', '22"')], default='', max_length=10, verbose_name='Rozmiar felg')),
                ('for_sale', models.BooleanField(default=False, verbose_name='Na sprzedaż')),
                ('registration', models.CharField(default='', verbose_name='Nr rejestracyjny')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Pojazd',
                'verbose_name_plural': 'Pojazdy',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleMake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Marka',
                'verbose_name_plural': 'Marki',
            },
        ),
        migrations.CreateModel(
            name='VehicleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='car_history.vehiclemake')),
            ],
            options={
                'verbose_name': 'Model',
                'verbose_name_plural': 'Modele',
                'unique_together': {('make', 'name')},
            },
        ),
        migrations.CreateModel(
            name='VehicleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=car_history.utils.vehicle_image_path, verbose_name='Zdjęcie')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='car_history.vehicle', verbose_name='Pojazd')),
            ],
            options={
                'verbose_name': 'Zdjęcie pojazdu',
                'verbose_name_plural': 'Zdjęcia pojazdów',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleGeneration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('production_start', models.PositiveIntegerField(blank=True, null=True)),
                ('production_end', models.PositiveIntegerField(blank=True, null=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generations', to='car_history.vehiclemodel')),
            ],
            options={
                'verbose_name': 'Generacja',
                'verbose_name_plural': 'Generacje',
                'unique_together': {('model', 'name')},
            },
        ),
        migrations.AddField(
            model_name='vehicle',
            name='generation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='car_history.vehiclegeneration'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ServiceEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('mileage', models.PositiveIntegerField()),
                ('description', models.TextField(max_length=1000)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('invoice_image', models.ImageField(blank=True, null=True, upload_to=car_history.utils.vehicle_invoice_path)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='car_history.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Discussion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('category', models.CharField(choices=[('OGOLNE', 'Ogólne'), ('TECHNICZNE', 'Techniczne pytania'), ('PORADY', 'Porady mechaniczne'), ('RECENZJE', 'Recenzje samochodów'), ('TUNING', 'Tuning'), ('ELEKTRO', 'Elektromobilność'), ('HISTORIA', 'Motoryzacja historyczna')], default='OGOLNE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DamageMarker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('y_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('severity', models.CharField(choices=[('drobne', 'Drobne'), ('umiarkowane', 'Umiarkowane'), ('poważne', 'Poważne')], default='drobne', max_length=11)),
                ('damage_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='markers', to='car_history.damageentry')),
            ],
        ),
        migrations.AddField(
            model_name='damageentry',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Uszkodzenia', to='car_history.vehicle'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('discussion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='car_history.discussion')),
            ],
        ),
    ]
